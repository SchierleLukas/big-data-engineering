services:

  kafka-producer:
    build:
      context: ./ingestion
      dockerfile: Dockerfile
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
    environment:
      BOOTSTRAP_SERVERS: kafka-broker-1:9092,kafka-broker-2:9093
      KAFKA_TOPIC: server-logs

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka-broker-1:
    image: confluentinc/cp-kafka:7.7.2
    container_name: kafka-broker-1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - /var/lib/kafka-1/data

  kafka-broker-2:
    image: confluentinc/cp-kafka:7.7.2
    container_name: kafka-broker-2
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - /var/lib/kafka-2/data

  spark-master:
    image: bitnami/spark:3.5.3
    ports:
      - "7077:7077"
      - "8080:8080"
    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 7077

  spark-worker-1:
    image: bitnami/spark:3.5.3
    container_name: spark-worker-1
    ports:
      - "8081:8081"
    depends_on:
      - spark-master
      - kafka-broker-1
      - kafka-broker-2
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_CORES: 1
      SPARK_WORKER_MEMORY: "1g"
      BOOTSTRAP_SERVERS: kafka-broker-1:9092,kafka-broker-2:9093

  spark-worker-2:
    image: bitnami/spark:3.5.3
    container_name: spark-worker-2
    ports:
      - "8082:8081"
    depends_on:
      - spark-master
      - kafka-broker-1
      - kafka-broker-2
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_CORES: 1
      SPARK_WORKER_MEMORY: "1g"
      BOOTSTRAP_SERVERS: kafka-broker-1:9092,kafka-broker-2:9093

  spark-app:
    build:
      context: ./processing
      dockerfile: Dockerfile
    ports:
      - "8083:8081"
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - spark-master
      - spark-worker-1
      - spark-worker-2
      - mariadb
    environment:
      SPARK_MASTER_URL: spark://spark-master:7077
      BOOTSTRAP_SERVERS: kafka-broker-1:9092,kafka-broker-2:9093
      KAFKA_TOPIC: server-logs
      MARIADB_URL: jdbc:mysql://mariadb:3306/logs
      MARIADB_USER: root
      MARIADB_PASSWORD: password

  mariadb:
    image: mariadb:11.7.1-ubi9-rc
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: logs
    volumes:
      - ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - mariadb-data:/var/lib/mysql  # Persistent Volume for MariaDB-Daten, active to persist data

  grafana:
    image: grafana/grafana:11.3.2
    ports:
      - "3000:3000"
    depends_on:
      - mariadb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana  # Persist Volume for Grafana, active to persist data


# active to persist data:     
volumes:
  grafana-data:  # Volume for Grafana
    driver: local
#   mariadb-data:  # Volume for MariaDB
#     driver: local
